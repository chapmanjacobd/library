name: PyTest and Publish

on:
  push:
    tags: ['v[0-9].[0-9]+.[0-9]+']
    paths-ignore:
      - 'README.md'
      - 'examples/**'

jobs:
  test:
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        python: ["3.8", "3.9", "3.10"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - uses: FedericoCarboni/setup-ffmpeg@v1

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry pytest
          poetry config virtualenvs.create false

      - run: poetry install
      - run: poetry build
      - run: pytest

  test-coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - uses: FedericoCarboni/setup-ffmpeg@v1

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry pytest pytest-cov
          poetry config virtualenvs.create false
          coverage run -m pytest
          coverage xml -o coverage.xml

      - uses: paambaati/codeclimate-action@v3.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: coverage report

  publish:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install poetry and dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Configure poetry
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}

      - name: Build and publish
        run: poetry publish --build

  release:
    needs: [test, publish]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
